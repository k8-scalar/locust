apiVersion: apps/v1
kind: Deployment
metadata:
  name: teastore-locust
  labels:
    run: teastore-locust
spec:
  selector:
    matchLabels:
      run: teastore-locust
  template:
    metadata:
      labels:
        run: teastore-locust
    spec:
      containers:
      - name: teastore-locust
        image: decomads/teastore-locust:1.0
        resources:
          requests:
            cpu: 1
            memory: 1Gi
          limits:
            cpu: 2
            memory: 2Gi
      nodeSelector:
        locustNode: "yes"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teastore-db
  labels:
    release: "{{ .Release.Name }}"
spec:
  selector:
    matchLabels:
      run: teastore-db
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: teastore
        run: teastore-db
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: teastore-db
        image: matthijskaminski/teastore-db:{{.Values.version}}
        resources:
          requests:
            cpu: {{.Values.dbCpu}}
            memory: {{.Values.dbMemory}}
          limits:
            cpu: {{.Values.dbCpu}}
            memory: {{.Values.dbMemory}}
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: persistence
          mountPath: /var/lib/mysql
      volumes:
      - name: persistence
        hostPath:
          path: /teastore/teastore-db
      nodeSelector:
        dbNode: "yes"
---
apiVersion: v1
kind: Service
metadata:
  name: teastore-db
  labels:
    app: teastore
    run: teastore-db
    release: "{{ .Release.Name }}"
spec:
  ports:
  - port: 3306
    protocol: TCP
  selector:
    run: teastore-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teastore-registry
  labels:
    release: "{{ .Release.Name }}"
spec:
  selector:
    matchLabels:
      run: teastore-registry
  template:
    metadata:
      labels:
        app: teastore
        run: teastore-registry
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: teastore-registry
        image: matthijskaminski/teastore-registry:{{.Values.version}}
        resources:
          requests:
            cpu: {{.Values.registryCpu}}
            memory: {{.Values.registryMemory}}
          limits:
            cpu: {{.Values.registryCpu}}
            memory: {{.Values.registryMemory}}
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: teastore-registry
  labels:
    app: teastore
    run: teastore-registry
    release: "{{ .Release.Name }}"
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    run: teastore-registry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teastore-persistence
  labels:
    release: "{{ .Release.Name }}"
spec:
  selector:
    matchLabels:
      run: teastore-persistence
  replicas: {{.Values.persistenceReplicas}}
  template:
    metadata:
      labels:
        app: teastore
        run: teastore-persistence
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: teastore-persistence
        image: matthijskaminski/teastore-persistence:{{.Values.version}}
        resources:
          requests:
            cpu: {{.Values.persistenceCpu}}
            memory: {{.Values.persistenceMemory}}
          limits:
            cpu: {{.Values.persistenceCpu}}
            memory: {{.Values.persistenceMemory}}
        ports:
        - containerPort: 8080
        env:
        - name: HOST_NAME
          value: "teastore-persistence"
        - name: REGISTRY_HOST
          value: "teastore-registry"
        - name: DB_HOST
          value: "teastore-db"
        - name: DB_PORT
          value: "3306"
        readinessProbe:
          httpGet:
            path: /tools.descartes.teastore.persistence/rest/generatedb/finishedCode
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: teastore-persistence
  labels:
    app: teastore
    run: teastore-persistence
    release: "{{ .Release.Name }}"
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    run: teastore-persistence
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teastore-auth
  labels:
    release: "{{ .Release.Name }}"
spec:
  selector:
    matchLabels:
      run: teastore-auth
  replicas: {{.Values.authReplicas}}
  template:
    metadata:
      labels:
        app: teastore
        run: teastore-auth
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: teastore-auth
        image: matthijskaminski/teastore-auth:{{.Values.version}}
        resources:
          requests:
            cpu: {{.Values.authCpu}}
            memory: {{.Values.authMemory}}
          limits:
            cpu: {{.Values.authCpu}}
            memory: {{.Values.authMemory}}
        ports:
        - containerPort: 8080
        env:
        - name: HOST_NAME
          value: "teastore-auth"
        - name: REGISTRY_HOST
          value: "teastore-registry"
        readinessProbe:
          httpGet:
            path: /tools.descartes.teastore.auth/rest/ready/isreadycode
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: teastore-auth
  labels:
    app: teastore
    run: teastore-auth
    release: "{{ .Release.Name }}"
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    run: teastore-auth
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teastore-image
  labels:
    release: "{{ .Release.Name }}"
spec:
  selector:
    matchLabels:
      run: teastore-image
  replicas: {{.Values.imageReplicas}}
  template:
    metadata:
      labels:
        app: teastore
        run: teastore-image
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: teastore-image
        image: matthijskaminski/teastore-image:{{.Values.version}}
        resources:
          requests:
            cpu: {{.Values.imageCpu}}
            memory: {{.Values.imageMemory}}
          limits:
            cpu: {{.Values.imageCpu}}
            memory: {{.Values.imageMemory}}
        ports:
        - containerPort: 8080
        env:
        - name: HOST_NAME
          value: "teastore-image"
        - name: REGISTRY_HOST
          value: "teastore-registry"
        readinessProbe:
          httpGet:
            path: /tools.descartes.teastore.image/rest/image/finishedcode
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: teastore-image
  labels:
    app: teastore
    run: teastore-image
    release: "{{ .Release.Name }}"
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    run: teastore-image
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teastore-recommender
  labels:
    release: "{{ .Release.Name }}"
spec:
  selector:
    matchLabels:
      run: teastore-recommender
  replicas: {{.Values.recommenderReplicas}}
  template:
    metadata:
      labels:
        app: teastore
        run: teastore-recommender
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: teastore-recommender
        image: matthijskaminski/teastore-recommender:{{.Values.version}}
        resources:
          requests:
            cpu: {{.Values.recommenderCpu}}
            memory: {{.Values.recommenderMemory}}
          limits:
            cpu: {{.Values.recommenderCpu}}
            memory: {{.Values.recommenderMemory}}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: HOST_NAME
          value: "teastore-recommender"
        - name: REGISTRY_HOST
          value: "teastore-registry"
        readinessProbe:
          httpGet:
            path: /tools.descartes.teastore.recommender/rest/train/isreadycode
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: teastore-recommender
  labels:
    app: teastore
    run: teastore-recommender
    release: "{{ .Release.Name }}"
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    run: teastore-recommender
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teastore-webui
  labels:
    release: "{{ .Release.Name }}"
spec:
  selector:
    matchLabels:
      run: teastore-webui
  replicas: {{.Values.webuiReplicas}}
  template:
    metadata:
      labels:
        app: teastore
        run: teastore-webui
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: teastore-webui
        image: matthijskaminski/teastore-webui:{{.Values.version}}
        resources:
          requests:
            cpu: {{.Values.webuiCpu}}
            memory: {{.Values.webuiMemory}}
          limits:
            cpu: {{.Values.webuiCpu}}
            memory: {{.Values.webuiMemory}}
        ports:
        - containerPort: 8080
        env:
        - name: HOST_NAME
          value: "teastore-webui"
        - name: REGISTRY_HOST
          value: "teastore-registry"
        # readinessProbe:
        #   httpGet:
        #     path: /tools.descartes.teastore.webui/rest/ready/isreadycode
        #     port: 8080
        #   initialDelaySeconds: 60
        #   periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: teastore-webui
  labels:
    app: teastore
    run: teastore-webui
    release: "{{ .Release.Name }}"
spec:
  type: NodePort
  ports:
  - port: 8080
    nodePort: 30080
    protocol: TCP
  selector:
    run: teastore-webui
